{"id":"../node_modules/tar/lib/header.js","dependencies":[{"name":"/Users/aledavalos/Desktop/motivational_calendar/package.json","includedInParent":true,"mtime":1635200505495},{"name":"/Users/aledavalos/Desktop/motivational_calendar/node_modules/tar/package.json","includedInParent":true,"mtime":1635177474342},{"name":"../tar.js","loc":{"line":7,"column":18},"parent":"/Users/aledavalos/Desktop/motivational_calendar/node_modules/tar/lib/header.js","resolved":"/Users/aledavalos/Desktop/motivational_calendar/node_modules/tar/tar.js"},{"name":"assert","loc":{"line":13,"column":21},"parent":"/Users/aledavalos/Desktop/motivational_calendar/node_modules/tar/lib/header.js","resolved":"/Users/aledavalos/Desktop/motivational_calendar/node_modules/assert/assert.js"},{"name":"process","parent":"/Users/aledavalos/Desktop/motivational_calendar/node_modules/tar/lib/header.js","resolved":"/Users/aledavalos/Desktop/motivational_calendar/node_modules/process/browser.js"},{"name":"buffer","parent":"/Users/aledavalos/Desktop/motivational_calendar/node_modules/tar/lib/header.js","resolved":"/Users/aledavalos/Desktop/motivational_calendar/node_modules/buffer/index.js"}],"generated":{"js":"var process = require(\"process\");\nvar Buffer = require(\"buffer\").Buffer;\n// parse a 512-byte header block to a data object, or vice-versa\n// If the data won't fit nicely in a simple header, then generate\n// the appropriate extended header file, and return that.\n\nmodule.exports = TarHeader\n\nvar tar = require(\"../tar.js\")\n  , fields = tar.fields\n  , fieldOffs = tar.fieldOffs\n  , fieldEnds = tar.fieldEnds\n  , fieldSize = tar.fieldSize\n  , numeric = tar.numeric\n  , assert = require(\"assert\").ok\n  , space = \" \".charCodeAt(0)\n  , slash = \"/\".charCodeAt(0)\n  , bslash = process.platform === \"win32\" ? \"\\\\\".charCodeAt(0) : null\n\nfunction TarHeader (block) {\n  if (!(this instanceof TarHeader)) return new TarHeader(block)\n  if (block) this.decode(block)\n}\n\nTarHeader.prototype =\n  { decode : decode\n  , encode: encode\n  , calcSum: calcSum\n  , checkSum: checkSum\n  }\n\nTarHeader.parseNumeric = parseNumeric\nTarHeader.encode = encode\nTarHeader.decode = decode\n\n// note that this will only do the normal ustar header, not any kind\n// of extended posix header file.  If something doesn't fit comfortably,\n// then it will set obj.needExtended = true, and set the block to\n// the closest approximation.\nfunction encode (obj) {\n  if (!obj && !(this instanceof TarHeader)) throw new Error(\n    \"encode must be called on a TarHeader, or supplied an object\")\n\n  obj = obj || this\n  var block = obj.block = new Buffer(512)\n\n  // if the object has a \"prefix\", then that's actually an extension of\n  // the path field.\n  if (obj.prefix) {\n    // console.error(\"%% header encoding, got a prefix\", obj.prefix)\n    obj.path = obj.prefix + \"/\" + obj.path\n    // console.error(\"%% header encoding, prefixed path\", obj.path)\n    obj.prefix = \"\"\n  }\n\n  obj.needExtended = false\n\n  if (obj.mode) {\n    if (typeof obj.mode === \"string\") obj.mode = parseInt(obj.mode, 8)\n    obj.mode = obj.mode & 0777\n  }\n\n  for (var f = 0; fields[f] !== null; f ++) {\n    var field = fields[f]\n      , off = fieldOffs[f]\n      , end = fieldEnds[f]\n      , ret\n\n    switch (field) {\n      case \"cksum\":\n        // special, done below, after all the others\n        break\n\n      case \"prefix\":\n        // special, this is an extension of the \"path\" field.\n        // console.error(\"%% header encoding, skip prefix later\")\n        break\n\n      case \"type\":\n        // convert from long name to a single char.\n        var type = obj.type || \"0\"\n        if (type.length > 1) {\n          type = tar.types[obj.type]\n          if (!type) type = \"0\"\n        }\n        writeText(block, off, end, type)\n        break\n\n      case \"path\":\n        // uses the \"prefix\" field if > 100 bytes, but <= 255\n        var pathLen = Buffer.byteLength(obj.path)\n          , pathFSize = fieldSize[fields.path]\n          , prefFSize = fieldSize[fields.prefix]\n\n        // paths between 100 and 255 should use the prefix field.\n        // longer than 255\n        if (pathLen > pathFSize &&\n            pathLen <= pathFSize + prefFSize) {\n          // need to find a slash somewhere in the middle so that\n          // path and prefix both fit in their respective fields\n          var searchStart = pathLen - 1 - pathFSize\n            , searchEnd = prefFSize\n            , found = false\n            , pathBuf = new Buffer(obj.path)\n\n          for ( var s = searchStart\n              ; (s <= searchEnd)\n              ; s ++ ) {\n            if (pathBuf[s] === slash || pathBuf[s] === bslash) {\n              found = s\n              break\n            }\n          }\n\n          if (found !== false) {\n            prefix = pathBuf.slice(0, found).toString(\"utf8\")\n            path = pathBuf.slice(found + 1).toString(\"utf8\")\n\n            ret = writeText(block, off, end, path)\n            off = fieldOffs[fields.prefix]\n            end = fieldEnds[fields.prefix]\n            // console.error(\"%% header writing prefix\", off, end, prefix)\n            ret = writeText(block, off, end, prefix) || ret\n            break\n          }\n        }\n\n        // paths less than 100 chars don't need a prefix\n        // and paths longer than 255 need an extended header and will fail\n        // on old implementations no matter what we do here.\n        // Null out the prefix, and fallthrough to default.\n        // console.error(\"%% header writing no prefix\")\n        var poff = fieldOffs[fields.prefix]\n          , pend = fieldEnds[fields.prefix]\n        writeText(block, poff, pend, \"\")\n        // fallthrough\n\n      // all other fields are numeric or text\n      default:\n        ret = numeric[field]\n            ? writeNumeric(block, off, end, obj[field])\n            : writeText(block, off, end, obj[field] || \"\")\n        break\n    }\n    obj.needExtended = obj.needExtended || ret\n  }\n\n  var off = fieldOffs[fields.cksum]\n    , end = fieldEnds[fields.cksum]\n\n  writeNumeric(block, off, end, calcSum.call(this, block))\n\n  return block\n}\n\n// if it's a negative number, or greater than will fit,\n// then use write256.\nvar MAXNUM = { 12: 077777777777\n             , 11: 07777777777\n             , 8 : 07777777\n             , 7 : 0777777 }\nfunction writeNumeric (block, off, end, num) {\n  var writeLen = end - off\n    , maxNum = MAXNUM[writeLen] || 0\n\n  num = num || 0\n  // console.error(\"  numeric\", num)\n\n  if (num instanceof Date ||\n      Object.prototype.toString.call(num) === \"[object Date]\") {\n    num = num.getTime() / 1000\n  }\n\n  if (num > maxNum || num < 0) {\n    write256(block, off, end, num)\n    // need an extended header if negative or too big.\n    return true\n  }\n\n  // god, tar is so annoying\n  // if the string is small enough, you should put a space\n  // between the octal string and the \\0, but if it doesn't\n  // fit, then don't.\n  var numStr = Math.floor(num).toString(8)\n  if (num < MAXNUM[writeLen - 1]) numStr += \" \"\n\n  // pad with \"0\" chars\n  if (numStr.length < writeLen) {\n    numStr = (new Array(writeLen - numStr.length).join(\"0\")) + numStr\n  }\n\n  if (numStr.length !== writeLen - 1) {\n    throw new Error(\"invalid length: \" + JSON.stringify(numStr) + \"\\n\" +\n                    \"expected: \"+writeLen)\n  }\n  block.write(numStr, off, writeLen, \"utf8\")\n  block[end - 1] = 0\n}\n\nfunction write256 (block, off, end, num) {\n  var buf = block.slice(off, end)\n  var positive = num >= 0\n  buf[0] = positive ? 0x80 : 0xFF\n\n  // get the number as a base-256 tuple\n  if (!positive) num *= -1\n  var tuple = []\n  do {\n    var n = num % 256\n    tuple.push(n)\n    num = (num - n) / 256\n  } while (num)\n\n  var bytes = tuple.length\n\n  var fill = buf.length - bytes\n  for (var i = 1; i < fill; i ++) {\n    buf[i] = positive ? 0 : 0xFF\n  }\n\n  // tuple is a base256 number, with [0] as the *least* significant byte\n  // if it's negative, then we need to flip all the bits once we hit the\n  // first non-zero bit.  The 2's-complement is (0x100 - n), and the 1's-\n  // complement is (0xFF - n).\n  var zero = true\n  for (i = bytes; i > 0; i --) {\n    var byte = tuple[bytes - i]\n    if (positive) buf[fill + i] = byte\n    else if (zero && byte === 0) buf[fill + i] = 0\n    else if (zero) {\n      zero = false\n      buf[fill + i] = 0x100 - byte\n    } else buf[fill + i] = 0xFF - byte\n  }\n}\n\nfunction writeText (block, off, end, str) {\n  // strings are written as utf8, then padded with \\0\n  var strLen = Buffer.byteLength(str)\n    , writeLen = Math.min(strLen, end - off)\n    // non-ascii fields need extended headers\n    // long fields get truncated\n    , needExtended = strLen !== str.length || strLen > writeLen\n\n  // write the string, and null-pad\n  if (writeLen > 0) block.write(str, off, writeLen, \"utf8\")\n  for (var i = off + writeLen; i < end; i ++) block[i] = 0\n\n  return needExtended\n}\n\nfunction calcSum (block) {\n  block = block || this.block\n  assert(Buffer.isBuffer(block) && block.length === 512)\n\n  if (!block) throw new Error(\"Need block to checksum\")\n\n  // now figure out what it would be if the cksum was \"        \"\n  var sum = 0\n    , start = fieldOffs[fields.cksum]\n    , end = fieldEnds[fields.cksum]\n\n  for (var i = 0; i < fieldOffs[fields.cksum]; i ++) {\n    sum += block[i]\n  }\n\n  for (var i = start; i < end; i ++) {\n    sum += space\n  }\n\n  for (var i = end; i < 512; i ++) {\n    sum += block[i]\n  }\n\n  return sum\n}\n\n\nfunction checkSum (block) {\n  var sum = calcSum.call(this, block)\n  block = block || this.block\n\n  var cksum = block.slice(fieldOffs[fields.cksum], fieldEnds[fields.cksum])\n  cksum = parseNumeric(cksum)\n\n  return cksum === sum\n}\n\nfunction decode (block) {\n  block = block || this.block\n  assert(Buffer.isBuffer(block) && block.length === 512)\n\n  this.block = block\n  this.cksumValid = this.checkSum()\n\n  var prefix = null\n\n  // slice off each field.\n  for (var f = 0; fields[f] !== null; f ++) {\n    var field = fields[f]\n      , val = block.slice(fieldOffs[f], fieldEnds[f])\n\n    switch (field) {\n      case \"ustar\":\n        // if not ustar, then everything after that is just padding.\n        if (val.toString() !== \"ustar\\0\") {\n          this.ustar = false\n          return\n        } else {\n          // console.error(\"ustar:\", val, val.toString())\n          this.ustar = val.toString()\n        }\n        break\n\n      // prefix is special, since it might signal the xstar header\n      case \"prefix\":\n        var atime = parseNumeric(val.slice(131, 131 + 12))\n          , ctime = parseNumeric(val.slice(131 + 12, 131 + 12 + 12))\n        if ((val[130] === 0 || val[130] === space) &&\n            typeof atime === \"number\" &&\n            typeof ctime === \"number\" &&\n            val[131 + 12] === space &&\n            val[131 + 12 + 12] === space) {\n          this.atime = atime\n          this.ctime = ctime\n          val = val.slice(0, 130)\n        }\n        prefix = val.toString(\"utf8\").replace(/\\0+$/, \"\")\n        // console.error(\"%% header reading prefix\", prefix)\n        break\n\n      // all other fields are null-padding text\n      // or a number.\n      default:\n        if (numeric[field]) {\n          this[field] = parseNumeric(val)\n        } else {\n          this[field] = val.toString(\"utf8\").replace(/\\0+$/, \"\")\n        }\n        break\n    }\n  }\n\n  // if we got a prefix, then prepend it to the path.\n  if (prefix) {\n    this.path = prefix + \"/\" + this.path\n    // console.error(\"%% header got a prefix\", this.path)\n  }\n}\n\nfunction parse256 (buf) {\n  // first byte MUST be either 80 or FF\n  // 80 for positive, FF for 2's comp\n  var positive\n  if (buf[0] === 0x80) positive = true\n  else if (buf[0] === 0xFF) positive = false\n  else return null\n\n  // build up a base-256 tuple from the least sig to the highest\n  var zero = false\n    , tuple = []\n  for (var i = buf.length - 1; i > 0; i --) {\n    var byte = buf[i]\n    if (positive) tuple.push(byte)\n    else if (zero && byte === 0) tuple.push(0)\n    else if (zero) {\n      zero = false\n      tuple.push(0x100 - byte)\n    } else tuple.push(0xFF - byte)\n  }\n\n  for (var sum = 0, i = 0, l = tuple.length; i < l; i ++) {\n    sum += tuple[i] * Math.pow(256, i)\n  }\n\n  return positive ? sum : -1 * sum\n}\n\nfunction parseNumeric (f) {\n  if (f[0] & 0x80) return parse256(f)\n\n  var str = f.toString(\"utf8\").split(\"\\0\")[0].trim()\n    , res = parseInt(str, 8)\n\n  return isNaN(res) ? null : res\n}\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/tar/lib/header.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/tar/lib/header.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}}],"sources":{"../node_modules/tar/lib/header.js":"// parse a 512-byte header block to a data object, or vice-versa\n// If the data won't fit nicely in a simple header, then generate\n// the appropriate extended header file, and return that.\n\nmodule.exports = TarHeader\n\nvar tar = require(\"../tar.js\")\n  , fields = tar.fields\n  , fieldOffs = tar.fieldOffs\n  , fieldEnds = tar.fieldEnds\n  , fieldSize = tar.fieldSize\n  , numeric = tar.numeric\n  , assert = require(\"assert\").ok\n  , space = \" \".charCodeAt(0)\n  , slash = \"/\".charCodeAt(0)\n  , bslash = process.platform === \"win32\" ? \"\\\\\".charCodeAt(0) : null\n\nfunction TarHeader (block) {\n  if (!(this instanceof TarHeader)) return new TarHeader(block)\n  if (block) this.decode(block)\n}\n\nTarHeader.prototype =\n  { decode : decode\n  , encode: encode\n  , calcSum: calcSum\n  , checkSum: checkSum\n  }\n\nTarHeader.parseNumeric = parseNumeric\nTarHeader.encode = encode\nTarHeader.decode = decode\n\n// note that this will only do the normal ustar header, not any kind\n// of extended posix header file.  If something doesn't fit comfortably,\n// then it will set obj.needExtended = true, and set the block to\n// the closest approximation.\nfunction encode (obj) {\n  if (!obj && !(this instanceof TarHeader)) throw new Error(\n    \"encode must be called on a TarHeader, or supplied an object\")\n\n  obj = obj || this\n  var block = obj.block = new Buffer(512)\n\n  // if the object has a \"prefix\", then that's actually an extension of\n  // the path field.\n  if (obj.prefix) {\n    // console.error(\"%% header encoding, got a prefix\", obj.prefix)\n    obj.path = obj.prefix + \"/\" + obj.path\n    // console.error(\"%% header encoding, prefixed path\", obj.path)\n    obj.prefix = \"\"\n  }\n\n  obj.needExtended = false\n\n  if (obj.mode) {\n    if (typeof obj.mode === \"string\") obj.mode = parseInt(obj.mode, 8)\n    obj.mode = obj.mode & 0777\n  }\n\n  for (var f = 0; fields[f] !== null; f ++) {\n    var field = fields[f]\n      , off = fieldOffs[f]\n      , end = fieldEnds[f]\n      , ret\n\n    switch (field) {\n      case \"cksum\":\n        // special, done below, after all the others\n        break\n\n      case \"prefix\":\n        // special, this is an extension of the \"path\" field.\n        // console.error(\"%% header encoding, skip prefix later\")\n        break\n\n      case \"type\":\n        // convert from long name to a single char.\n        var type = obj.type || \"0\"\n        if (type.length > 1) {\n          type = tar.types[obj.type]\n          if (!type) type = \"0\"\n        }\n        writeText(block, off, end, type)\n        break\n\n      case \"path\":\n        // uses the \"prefix\" field if > 100 bytes, but <= 255\n        var pathLen = Buffer.byteLength(obj.path)\n          , pathFSize = fieldSize[fields.path]\n          , prefFSize = fieldSize[fields.prefix]\n\n        // paths between 100 and 255 should use the prefix field.\n        // longer than 255\n        if (pathLen > pathFSize &&\n            pathLen <= pathFSize + prefFSize) {\n          // need to find a slash somewhere in the middle so that\n          // path and prefix both fit in their respective fields\n          var searchStart = pathLen - 1 - pathFSize\n            , searchEnd = prefFSize\n            , found = false\n            , pathBuf = new Buffer(obj.path)\n\n          for ( var s = searchStart\n              ; (s <= searchEnd)\n              ; s ++ ) {\n            if (pathBuf[s] === slash || pathBuf[s] === bslash) {\n              found = s\n              break\n            }\n          }\n\n          if (found !== false) {\n            prefix = pathBuf.slice(0, found).toString(\"utf8\")\n            path = pathBuf.slice(found + 1).toString(\"utf8\")\n\n            ret = writeText(block, off, end, path)\n            off = fieldOffs[fields.prefix]\n            end = fieldEnds[fields.prefix]\n            // console.error(\"%% header writing prefix\", off, end, prefix)\n            ret = writeText(block, off, end, prefix) || ret\n            break\n          }\n        }\n\n        // paths less than 100 chars don't need a prefix\n        // and paths longer than 255 need an extended header and will fail\n        // on old implementations no matter what we do here.\n        // Null out the prefix, and fallthrough to default.\n        // console.error(\"%% header writing no prefix\")\n        var poff = fieldOffs[fields.prefix]\n          , pend = fieldEnds[fields.prefix]\n        writeText(block, poff, pend, \"\")\n        // fallthrough\n\n      // all other fields are numeric or text\n      default:\n        ret = numeric[field]\n            ? writeNumeric(block, off, end, obj[field])\n            : writeText(block, off, end, obj[field] || \"\")\n        break\n    }\n    obj.needExtended = obj.needExtended || ret\n  }\n\n  var off = fieldOffs[fields.cksum]\n    , end = fieldEnds[fields.cksum]\n\n  writeNumeric(block, off, end, calcSum.call(this, block))\n\n  return block\n}\n\n// if it's a negative number, or greater than will fit,\n// then use write256.\nvar MAXNUM = { 12: 077777777777\n             , 11: 07777777777\n             , 8 : 07777777\n             , 7 : 0777777 }\nfunction writeNumeric (block, off, end, num) {\n  var writeLen = end - off\n    , maxNum = MAXNUM[writeLen] || 0\n\n  num = num || 0\n  // console.error(\"  numeric\", num)\n\n  if (num instanceof Date ||\n      Object.prototype.toString.call(num) === \"[object Date]\") {\n    num = num.getTime() / 1000\n  }\n\n  if (num > maxNum || num < 0) {\n    write256(block, off, end, num)\n    // need an extended header if negative or too big.\n    return true\n  }\n\n  // god, tar is so annoying\n  // if the string is small enough, you should put a space\n  // between the octal string and the \\0, but if it doesn't\n  // fit, then don't.\n  var numStr = Math.floor(num).toString(8)\n  if (num < MAXNUM[writeLen - 1]) numStr += \" \"\n\n  // pad with \"0\" chars\n  if (numStr.length < writeLen) {\n    numStr = (new Array(writeLen - numStr.length).join(\"0\")) + numStr\n  }\n\n  if (numStr.length !== writeLen - 1) {\n    throw new Error(\"invalid length: \" + JSON.stringify(numStr) + \"\\n\" +\n                    \"expected: \"+writeLen)\n  }\n  block.write(numStr, off, writeLen, \"utf8\")\n  block[end - 1] = 0\n}\n\nfunction write256 (block, off, end, num) {\n  var buf = block.slice(off, end)\n  var positive = num >= 0\n  buf[0] = positive ? 0x80 : 0xFF\n\n  // get the number as a base-256 tuple\n  if (!positive) num *= -1\n  var tuple = []\n  do {\n    var n = num % 256\n    tuple.push(n)\n    num = (num - n) / 256\n  } while (num)\n\n  var bytes = tuple.length\n\n  var fill = buf.length - bytes\n  for (var i = 1; i < fill; i ++) {\n    buf[i] = positive ? 0 : 0xFF\n  }\n\n  // tuple is a base256 number, with [0] as the *least* significant byte\n  // if it's negative, then we need to flip all the bits once we hit the\n  // first non-zero bit.  The 2's-complement is (0x100 - n), and the 1's-\n  // complement is (0xFF - n).\n  var zero = true\n  for (i = bytes; i > 0; i --) {\n    var byte = tuple[bytes - i]\n    if (positive) buf[fill + i] = byte\n    else if (zero && byte === 0) buf[fill + i] = 0\n    else if (zero) {\n      zero = false\n      buf[fill + i] = 0x100 - byte\n    } else buf[fill + i] = 0xFF - byte\n  }\n}\n\nfunction writeText (block, off, end, str) {\n  // strings are written as utf8, then padded with \\0\n  var strLen = Buffer.byteLength(str)\n    , writeLen = Math.min(strLen, end - off)\n    // non-ascii fields need extended headers\n    // long fields get truncated\n    , needExtended = strLen !== str.length || strLen > writeLen\n\n  // write the string, and null-pad\n  if (writeLen > 0) block.write(str, off, writeLen, \"utf8\")\n  for (var i = off + writeLen; i < end; i ++) block[i] = 0\n\n  return needExtended\n}\n\nfunction calcSum (block) {\n  block = block || this.block\n  assert(Buffer.isBuffer(block) && block.length === 512)\n\n  if (!block) throw new Error(\"Need block to checksum\")\n\n  // now figure out what it would be if the cksum was \"        \"\n  var sum = 0\n    , start = fieldOffs[fields.cksum]\n    , end = fieldEnds[fields.cksum]\n\n  for (var i = 0; i < fieldOffs[fields.cksum]; i ++) {\n    sum += block[i]\n  }\n\n  for (var i = start; i < end; i ++) {\n    sum += space\n  }\n\n  for (var i = end; i < 512; i ++) {\n    sum += block[i]\n  }\n\n  return sum\n}\n\n\nfunction checkSum (block) {\n  var sum = calcSum.call(this, block)\n  block = block || this.block\n\n  var cksum = block.slice(fieldOffs[fields.cksum], fieldEnds[fields.cksum])\n  cksum = parseNumeric(cksum)\n\n  return cksum === sum\n}\n\nfunction decode (block) {\n  block = block || this.block\n  assert(Buffer.isBuffer(block) && block.length === 512)\n\n  this.block = block\n  this.cksumValid = this.checkSum()\n\n  var prefix = null\n\n  // slice off each field.\n  for (var f = 0; fields[f] !== null; f ++) {\n    var field = fields[f]\n      , val = block.slice(fieldOffs[f], fieldEnds[f])\n\n    switch (field) {\n      case \"ustar\":\n        // if not ustar, then everything after that is just padding.\n        if (val.toString() !== \"ustar\\0\") {\n          this.ustar = false\n          return\n        } else {\n          // console.error(\"ustar:\", val, val.toString())\n          this.ustar = val.toString()\n        }\n        break\n\n      // prefix is special, since it might signal the xstar header\n      case \"prefix\":\n        var atime = parseNumeric(val.slice(131, 131 + 12))\n          , ctime = parseNumeric(val.slice(131 + 12, 131 + 12 + 12))\n        if ((val[130] === 0 || val[130] === space) &&\n            typeof atime === \"number\" &&\n            typeof ctime === \"number\" &&\n            val[131 + 12] === space &&\n            val[131 + 12 + 12] === space) {\n          this.atime = atime\n          this.ctime = ctime\n          val = val.slice(0, 130)\n        }\n        prefix = val.toString(\"utf8\").replace(/\\0+$/, \"\")\n        // console.error(\"%% header reading prefix\", prefix)\n        break\n\n      // all other fields are null-padding text\n      // or a number.\n      default:\n        if (numeric[field]) {\n          this[field] = parseNumeric(val)\n        } else {\n          this[field] = val.toString(\"utf8\").replace(/\\0+$/, \"\")\n        }\n        break\n    }\n  }\n\n  // if we got a prefix, then prepend it to the path.\n  if (prefix) {\n    this.path = prefix + \"/\" + this.path\n    // console.error(\"%% header got a prefix\", this.path)\n  }\n}\n\nfunction parse256 (buf) {\n  // first byte MUST be either 80 or FF\n  // 80 for positive, FF for 2's comp\n  var positive\n  if (buf[0] === 0x80) positive = true\n  else if (buf[0] === 0xFF) positive = false\n  else return null\n\n  // build up a base-256 tuple from the least sig to the highest\n  var zero = false\n    , tuple = []\n  for (var i = buf.length - 1; i > 0; i --) {\n    var byte = buf[i]\n    if (positive) tuple.push(byte)\n    else if (zero && byte === 0) tuple.push(0)\n    else if (zero) {\n      zero = false\n      tuple.push(0x100 - byte)\n    } else tuple.push(0xFF - byte)\n  }\n\n  for (var sum = 0, i = 0, l = tuple.length; i < l; i ++) {\n    sum += tuple[i] * Math.pow(256, i)\n  }\n\n  return positive ? sum : -1 * sum\n}\n\nfunction parseNumeric (f) {\n  if (f[0] & 0x80) return parse256(f)\n\n  var str = f.toString(\"utf8\").split(\"\\0\")[0].trim()\n    , res = parseInt(str, 8)\n\n  return isNaN(res) ? null : res\n}\n\n"},"lineCount":388}},"error":null,"hash":"bf923152a4715233ee131051e56d6f74","cacheData":{"env":{}}}